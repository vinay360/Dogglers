// Generated by view binder compiler. Do not edit!
package com.example.dogglersapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.dogglersapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonGrid;

  @NonNull
  public final Button buttonHorizontal;

  @NonNull
  public final Button buttonNavigation;

  @NonNull
  public final Button buttonVertical;

  @NonNull
  public final Button buttonViewPager;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonGrid,
      @NonNull Button buttonHorizontal, @NonNull Button buttonNavigation,
      @NonNull Button buttonVertical, @NonNull Button buttonViewPager) {
    this.rootView = rootView;
    this.buttonGrid = buttonGrid;
    this.buttonHorizontal = buttonHorizontal;
    this.buttonNavigation = buttonNavigation;
    this.buttonVertical = buttonVertical;
    this.buttonViewPager = buttonViewPager;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_grid;
      Button buttonGrid = ViewBindings.findChildViewById(rootView, id);
      if (buttonGrid == null) {
        break missingId;
      }

      id = R.id.button_horizontal;
      Button buttonHorizontal = ViewBindings.findChildViewById(rootView, id);
      if (buttonHorizontal == null) {
        break missingId;
      }

      id = R.id.button_navigation;
      Button buttonNavigation = ViewBindings.findChildViewById(rootView, id);
      if (buttonNavigation == null) {
        break missingId;
      }

      id = R.id.button_vertical;
      Button buttonVertical = ViewBindings.findChildViewById(rootView, id);
      if (buttonVertical == null) {
        break missingId;
      }

      id = R.id.button_view_pager;
      Button buttonViewPager = ViewBindings.findChildViewById(rootView, id);
      if (buttonViewPager == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, buttonGrid, buttonHorizontal,
          buttonNavigation, buttonVertical, buttonViewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
